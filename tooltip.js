Vue.component("inline-edit",{name:"inline-edit",props:{value:{type:Object,required:!0},update_column:{type:Object,required:!0},edetable:{type:Boolean,default:!0},toottipclass:{type:String,default:""},editstyle:{type:String,default:"popover"}},data:()=>({visibility:!1,update_field:null,is_loading:!1,openOnFocus:!0,keepFirst:!0,column_selected_options:"",data_value:"",asyc_data:[],tooltip_class:"is-white",isFetching:!1}),watch:{value:function(e,t){e!=t&&(this.update_field=e[this.update_column.field])}},components:{rcrmdatepicker:()=>rcrm_import("controls/rcrm_datepicker"),fileupload:()=>rcrm_import("controls/file_upload"),multiselect:()=>rcrm_import("controls/multiselect")},methods:{getAsyncData:_.debounce(function(){this.data_value.length<3?this.data=[]:this.getAsyncDataOnLoad(this.update_column.service)},500),getAsyncDataOnLoad(e){var t=this;this.isFetching=!0,axios.post(e,{search:this.data_value}).then(function(e){console.log(e.data),t.asyc_data=[],e.data.data.forEach(e=>t.asyc_data.push(e)),t.isFetching=!0}).catch(function(e){t.asyc_data=[],console.log("Error! Could not reach the API. "+e)}).finally(()=>{t.isFetching=!1})},filteredIndustryObj(e){return e.filter(e=>e.toString().toLowerCase().indexOf(this.name_.toLowerCase())>=0)},filteredOwnerObj(e){return e.filter(e=>e.name.toString().toLowerCase().indexOf(this.owner_.toLowerCase())>=0)},filteredColumnsObj(e){return e.filter(e=>e.label.toString().toLowerCase().indexOf(this.column_selected_options.toLowerCase())>=0)},filteredCustomObj(e){return e.filter(e=>e.label.toString().toLowerCase().indexOf(this.column_selected_options.toLowerCase())>=0)},updateFields(){if(!this.isempty(this.update_column)){var e=this,t=this.value.id;this.$validator.validateAll().then(l=>{l?("availability"==this.update_column.type&&(e.update_field="1"==e.update_field?e.update_field:0),"dropdown"==this.update_column.type&&-1!==this.update_column.field.indexOf("custcolumn")&&(e.update_field=e.update_field.label),axios.post("/actions/updateFields.php",{key:this.update_column.field,value:e.update_field,tableFlag:this.update_column.entity,id:t}).then(function(t){console.log(t.data),"success"==t.data.status&&("dropdown"==e.update_column.type&&(e.value[e.update_column.display_column]=e.data_value),e.value[e.update_column.field]=e.update_field,e.visibility=!1)}).catch(function(e){console.log("Error! Could not reach the API. "+e)}).then(function(){e.is_loading=!1}),e.is_loading=!0):0!=e.$validator.errors.items.length?e.$el.querySelector('[name="'+e.$validator.errors.items[0].field+'"]'):e.$el.querySelector('[name="'+this.update_column.label+'"]')})}}},mounted(){this.update_field=this.value[this.update_column.field],this.update_column.service&&this.getAsyncDataOnLoad(this.update_column.service),this.update_column.display_column?this.data_value=this.value[this.update_column.display_column]:this.data_value=this.value[this.update_column.field]},computed:{filteredDataObj(){return this.columns.filter(e=>e.label.toString().toLowerCase().indexOf(this.column.toLowerCase())>=0)}},template:'\n        <div class="field rcrm-inline">\n            <p v-if="editstyle == \'popover\'" v-tooltip.notrigger="{ html: \'popover\'+$vnode.key, class: \'is-white\'+toottipclass, visible: (visibility && edetable)}">\n                <slot name="value_template" v-bind:entity="value">\n    \n                    \x3c!--------------------------------------------------------------\x3e\n                    <template v-if="!isempty(value[update_column.field]) && update_column.type == \'date\'">\n                        {{ getDateTime(value[update_column.field]) }}\n                    </template>\n                    <template v-else-if="update_column.type == \'file\'">\n                        <div class="field-body">\n                            <a v-if="value[update_column.field]" @click="viewFile(value[update_column.field])">\n                                <span v-tooltip="getFileName(value[update_column.field])"><svg\n                                        xmlns="http://www.w3.org/2000/svg" class="resume-icon" style="width:20px;height:20px"\n                                        viewBox="0 0 105.728 143.693">\n                                        <g id="Group_1" class="fill-icon" data-name="Group 1"\n                                            transform="translate(-604 -302.656)">\n                                            <path id="Path_2" data-name="Path 2" style="fill: #121ebd;"\n                                                d="M1306,385V528.349h105.728V419.731l-32.89-35.075Z"\n                                                transform="translate(-702 -82)"></path>\n                                            <path id="download-button" data-name="Path 6" class="cls-2"\n                                                d="M89.1,23.248H74.572V-13.063H52.779V23.248H38.25L63.675,48.673Z"\n                                                transform="translate(592.75 361.063)"></path>\n                                        </g>\n                                    </svg></span>\n                            </a>\n                            <span v-else class="has-text-light">\n                                <span v-tooltip="\'File Not Available\'">\n                                    <svg xmlns="http://www.w3.org/2000/svg" class="resume-icon" style="width:20px;height:20px"\n                                        viewBox="0 0 105.728 143.693">\n                                        <g id="Group_1" class="empty-icon" data-name="Group 1"\n                                            transform="translate(-604 -302.656)">\n                                            <path id="Path_2" data-name="Path 2"\n                                                style="fill: #fff;stroke: #121ebd;stroke-width: 10px;"\n                                                d="M1306,385V528.349h105.728V419.731l-32.89-35.075Z"\n                                                transform="translate(-702 -82)"></path>\n                                        </g>\n                                    </svg>\n                                </span>\n                            </span>\n                        </div>\n                    </template>\n                    <template v-else-if="update_column.type == \'checkbox\'">\n                        {{ yesno(value[update_column.field]) }}\n                    </template>\n                    <template v-else-if="!isempty(update_column.display_column) && !isempty(value[update_column.field])">\n                        <span dir="auto"\n                            v-tooltip="value[update_column.display_column]">{{ _.truncate(value[update_column.display_column],{\'length\': 30, \'separator\': \' \'}) }}</span>\n                    </template>\n                    <template v-else-if="!isempty(value[update_column.field])">                        \n                        <span dir="auto"  v-tooltip="value[update_column.field]" class="text-truncate"\n                            v-html="linkify(value[update_column.field])"></span>\n                    </template>\n                    <template v-else>\n                        <span class="has-text-light">Not Available</span>\n                    </template>\n                    \x3c!--------------------------------------------------------------\x3e\n                </slot>\n                <a v-if="edetable" @click="visibility = !visibility" class="edit-linline-icon color-black m-l-5"> \n                    <i class="mdi mdi-pencil"></i> \n                </a>\n            </p>\n    \n            <p v-if="editstyle == \'inline\'" :class="{\'is-hidden\': visibility}">\n                <slot name="value_template" v-bind:entity="value">\n    \n                    \x3c!--------------------------------------------------------------\x3e\n                    <template v-if="!isempty(value[update_column.field]) && update_column.type == \'date\'">\n                        {{ getDateTime(value[update_column.field]) }}\n                    </template>\n                    <template v-else-if="update_column.type == \'file\'">\n                        <div class="field-body">\n                            <a v-if="value[update_column.field]" @click="viewFile(value[update_column.field])">\n                                <span v-tooltip="getFileName(value[update_column.field])"><svg\n                                        xmlns="http://www.w3.org/2000/svg" class="resume-icon" style="width:20px;height:20px"\n                                        viewBox="0 0 105.728 143.693">\n                                        <g id="Group_1" class="fill-icon" data-name="Group 1"\n                                            transform="translate(-604 -302.656)">\n                                            <path id="Path_2" data-name="Path 2" style="fill: #121ebd;"\n                                                d="M1306,385V528.349h105.728V419.731l-32.89-35.075Z"\n                                                transform="translate(-702 -82)"></path>\n                                            <path id="download-button" data-name="Path 6" class="cls-2"\n                                                d="M89.1,23.248H74.572V-13.063H52.779V23.248H38.25L63.675,48.673Z"\n                                                transform="translate(592.75 361.063)"></path>\n                                        </g>\n                                    </svg></span>\n                            </a>\n                            <span v-else class="has-text-light">\n                                <span v-tooltip="\'File Not Available\'">\n                                    <svg xmlns="http://www.w3.org/2000/svg" class="resume-icon" style="width:20px;height:20px"\n                                        viewBox="0 0 105.728 143.693">\n                                        <g id="Group_1" class="empty-icon" data-name="Group 1"\n                                            transform="translate(-604 -302.656)">\n                                            <path id="Path_2" data-name="Path 2"\n                                                style="fill: #fff;stroke: #121ebd;stroke-width: 10px;"\n                                                d="M1306,385V528.349h105.728V419.731l-32.89-35.075Z"\n                                                transform="translate(-702 -82)"></path>\n                                        </g>\n                                    </svg>\n                                </span>\n                            </span>\n                        </div>\n                    </template>\n                    <template v-else-if="update_column.type == \'checkbox\'">\n                        {{ yesno(value[update_column.field]) }}\n                    </template>\n                    <template v-else-if="!isempty(update_column.display_column) && !isempty(value[update_column.field])">\n                        <span dir="auto"\n                            v-tooltip="value[update_column.display_column]">{{ _.truncate(value[update_column.display_column],{\'length\': 30, \'separator\': \' \'}) }}</span>\n                    </template>\n                    <template v-else-if="!isempty(value[update_column.field])">\n                        <span dir="auto"  v-tooltip="value[update_column.field]" class="text-truncate"\n                            v-html="linkify(value[update_column.field])"></span>\n                    </template>\n                    <template v-else>\n                        <span class="has-text-light">Not Available</span>\n                    </template>\n                    \x3c!--------------------------------------------------------------\x3e\n                </slot>\n                <a v-if="edetable" @click="visibility = !visibility" class="edit-linline-icon color-black m-l-5"> \n                    <i class="mdi mdi-pencil"></i> \n                </a>\n            </p>\n            <div :id="\'popover\'+$vnode.key" :class="{\'is-hidden\': (!visibility && editstyle == \'inline\'), \'rcrm-inline-content\' : (editstyle == \'popover\')}">\n                <form style="display: inherit;" v-on:submit.prevent="updateFields()">\n                    <b-field :type="errors.has(update_column.label) ? \'is-danger\': \'\'" :label="update_column.label"\n                        :message="errors.has(update_column.label) ? errors.first(update_column.label) : \'\'">\n                        <b-input v-if="update_column.type == \'\'" id="sTests-" :name="update_column.label" v-validate="\'required|min:3\'"\n                            type="text" value="" :maxlength="update_column.dblength" placeholder="Select Field Name First">\n                        </b-input>\n    \n                        <b-input v-if="update_column.type == \'text\'" v-model="update_field" id="sTest-companyText"\n                            v-validate="\'required|min:0\'" type="text" :name="update_column.label" value="" :maxlength="update_column.dblength"\n                            placeholder="Enter Text">\n                        </b-input>\n    \n                        <b-input v-else-if="update_column.type == \'number\'" v-model="update_field" id="sTest-companyNuber"\n                            type="number" value="" :maxlength="update_column.dblength" :name="update_column.label" placeholder="Enter Here"\n                            v-validate="\'required|min_value:0\'">\n                        </b-input>\n\n                        \x3c!-- Custom fields of type Drop down --\x3e\n                        <b-autocomplete v-if="update_column.type == \'dropdown\'  && update_column.field.indexOf(\'custcolumn\') !== -1 "  \n                            icon="chevron-down" v-model="data_value" placeholder="Select Value" :name="update_column.label"\n                            class="is-icon-right" :keep-first="keepFirst" :open-on-focus="openOnFocus" :data="filteredCustomObj(update_column.data)"\n                            :field="update_column.dropdown_field" @select="option => update_field = option" v-validate="{ rules: { required: ( update_field != \'\' ) ? false : true} }">\n                        </b-autocomplete>\n                        \n                        \x3c!-- Custom fields Drop down ends --\x3e\n                        <b-autocomplete v-else-if="update_column.type == \'dropdown\' && update_column.data"\n                            icon="chevron-down" \n                            v-model="data_value" placeholder="Select Value" :name="update_column.label"\n                            class="is-icon-right" :keep-first="keepFirst" :open-on-focus="openOnFocus" :data="filteredCustomObj(update_column.data)"\n                            :field="update_column.dropdown_field" @select="option => update_field = option.id" v-validate="{ rules: { required: ( update_field != \'\' ) ? false : true} }">\n                        </b-autocomplete>\n\n                        \x3c!-- Custom fields Multi Select Ends --\x3e\n                        <b-autocomplete v-else-if="update_column.type == \'dropdown\' && update_column.service"\n                            placeholder="Start Typing" \n                            :open-on-focus="openOnFocus" v-model="data_value" \n                            :field="update_column.dropdown_field"\n                            :name="update_column.label" :loading="isFetching" \n                            v-validate="{ rules: { required: ( update_field != \'\' ) ? false : true} }"\n                            :data="asyc_data" @keyup.native="getAsyncData" @select="option => update_field = option.id">\n                        </b-autocomplete>\n    \n                        \x3c!-- Custom fields Multi Select Ends --\x3e\n                        <multiselect v-else-if="update_column.type == \'multiselect\' && update_column.data"\n                            :key="update_field"\n                            :data="update_column.data"\n                            :value="update_field"\n                            @input="update_field = $event">\n                        </multiselect>\n    \n                        <rcrmdatepicker v-else-if="update_column.type == \'date\'" v-model="update_field" id="sTest-companyDate"\n                            placeholder="Click to select date..." icon="calendar-today" :name="update_column.label"\n                            v-validate="\'required|min:0\'">\n                        </rcrmdatepicker>\n    \n                        <b-switch v-else-if="update_column.type == \'availability\'" v-model="update_field" true-value="1"\n                            false-value="0" id="sTest-companySwitch">\n                            {{ update_field == 1 ? \'Yes\' : \'No\' }} \n                        </b-switch>\n    \n                        <b-switch v-else-if="update_column.type == \'checkbox\'" v-model="update_field" true-value="1"\n                            false-value="0">\n                            {{ update_field == 1 ? \'Yes\' : \'No\' }} \n                        </b-switch>\n    \n                        <fileupload v-else-if="update_column.type == \'file\'" v-model="update_field"\n                            :accountid="$root.user.accountid" :slug="value.slug" :folder="update_column.entity"\n                            :column="update_column.field">\n                        </fileupload>\n                    </b-field>\n                    <div class="inline-actions">\n                        <button class="button" :class="{\'is-loading\' : is_loading}"><i\n                                class="mdi mdi-check-circle mdi-18px"></i></button>\n                        <button v-if="!is_loading" @click.prevent="visibility = !visibility" class="button"><i\n                                class="mdi mdi-close-circle mdi-18px"></i></button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        '});
